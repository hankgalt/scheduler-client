// source: scheduler.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = function () {
  if (this) {
    return this
  }
  if (typeof window !== 'undefined') {
    return window
  }
  if (typeof global !== 'undefined') {
    return global
  }
  if (typeof self !== 'undefined') {
    return self
  }
  return Function('return this')()
}.call(null)

var api_google_rpc_status_pb = require('./api/google/rpc/status_pb.js')
goog.object.extend(proto, api_google_rpc_status_pb)
goog.exportSymbol('proto.scheduler.v1.AddEntityRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.AddEntityResponse', null, global)
goog.exportSymbol(
  'proto.scheduler.v1.AddEntityResponse.TestOneofCase',
  null,
  global
)
goog.exportSymbol('proto.scheduler.v1.BatchState', null, global)
goog.exportSymbol('proto.scheduler.v1.BusinessAgent', null, global)
goog.exportSymbol('proto.scheduler.v1.BusinessFiling', null, global)
goog.exportSymbol('proto.scheduler.v1.BusinessPrincipal', null, global)
goog.exportSymbol('proto.scheduler.v1.DeleteEntityRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.DeleteResponse', null, global)
goog.exportSymbol('proto.scheduler.v1.DeleteRunRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.EntityType', null, global)
goog.exportSymbol('proto.scheduler.v1.ErrorResultState', null, global)
goog.exportSymbol('proto.scheduler.v1.FileRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.FileSignalRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.FileWorkflowState', null, global)
goog.exportSymbol('proto.scheduler.v1.FileWorkflowStateResponse', null, global)
goog.exportSymbol('proto.scheduler.v1.HeaderState', null, global)
goog.exportSymbol('proto.scheduler.v1.QueryWorkflowRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.RunRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.RunResponse', null, global)
goog.exportSymbol('proto.scheduler.v1.RunsResponse', null, global)
goog.exportSymbol('proto.scheduler.v1.SearchRunRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.StreamAddEntityResponse', null, global)
goog.exportSymbol(
  'proto.scheduler.v1.StreamAddEntityResponse.TestOneofCase',
  null,
  global
)
goog.exportSymbol('proto.scheduler.v1.SuccessResultState', null, global)
goog.exportSymbol('proto.scheduler.v1.UpdateRunRequest', null, global)
goog.exportSymbol('proto.scheduler.v1.WorkflowRun', null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.WorkflowRun = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.WorkflowRun, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.WorkflowRun.displayName = 'proto.scheduler.v1.WorkflowRun'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.FileRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.FileRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.FileRequest.displayName = 'proto.scheduler.v1.FileRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.RunResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.RunResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.RunResponse.displayName = 'proto.scheduler.v1.RunResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.RunRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.RunRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.RunRequest.displayName = 'proto.scheduler.v1.RunRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.UpdateRunRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.UpdateRunRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.UpdateRunRequest.displayName =
    'proto.scheduler.v1.UpdateRunRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.DeleteRunRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.DeleteRunRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.DeleteRunRequest.displayName =
    'proto.scheduler.v1.DeleteRunRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.SearchRunRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.SearchRunRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.SearchRunRequest.displayName =
    'proto.scheduler.v1.SearchRunRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.RunsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.scheduler.v1.RunsResponse.repeatedFields_,
    null
  )
}
goog.inherits(proto.scheduler.v1.RunsResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.RunsResponse.displayName =
    'proto.scheduler.v1.RunsResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.DeleteResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.DeleteResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.DeleteResponse.displayName =
    'proto.scheduler.v1.DeleteResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.BusinessAgent = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.BusinessAgent, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.BusinessAgent.displayName =
    'proto.scheduler.v1.BusinessAgent'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.BusinessPrincipal = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.BusinessPrincipal, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.BusinessPrincipal.displayName =
    'proto.scheduler.v1.BusinessPrincipal'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.BusinessFiling = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.BusinessFiling, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.BusinessFiling.displayName =
    'proto.scheduler.v1.BusinessFiling'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.AddEntityRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.AddEntityRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.AddEntityRequest.displayName =
    'proto.scheduler.v1.AddEntityRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.DeleteEntityRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.DeleteEntityRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.DeleteEntityRequest.displayName =
    'proto.scheduler.v1.DeleteEntityRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.AddEntityResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.scheduler.v1.AddEntityResponse.oneofGroups_
  )
}
goog.inherits(proto.scheduler.v1.AddEntityResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.AddEntityResponse.displayName =
    'proto.scheduler.v1.AddEntityResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.StreamAddEntityResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.scheduler.v1.StreamAddEntityResponse.oneofGroups_
  )
}
goog.inherits(proto.scheduler.v1.StreamAddEntityResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.StreamAddEntityResponse.displayName =
    'proto.scheduler.v1.StreamAddEntityResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.FileSignalRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.FileSignalRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.FileSignalRequest.displayName =
    'proto.scheduler.v1.FileSignalRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.QueryWorkflowRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.QueryWorkflowRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.QueryWorkflowRequest.displayName =
    'proto.scheduler.v1.QueryWorkflowRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.SuccessResultState = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.SuccessResultState, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.SuccessResultState.displayName =
    'proto.scheduler.v1.SuccessResultState'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.ErrorResultState = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.ErrorResultState, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.ErrorResultState.displayName =
    'proto.scheduler.v1.ErrorResultState'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.HeaderState = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.scheduler.v1.HeaderState.repeatedFields_,
    null
  )
}
goog.inherits(proto.scheduler.v1.HeaderState, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.HeaderState.displayName = 'proto.scheduler.v1.HeaderState'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.BatchState = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.scheduler.v1.BatchState.repeatedFields_,
    null
  )
}
goog.inherits(proto.scheduler.v1.BatchState, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.BatchState.displayName = 'proto.scheduler.v1.BatchState'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.FileWorkflowState = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.scheduler.v1.FileWorkflowState.repeatedFields_,
    null
  )
}
goog.inherits(proto.scheduler.v1.FileWorkflowState, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.FileWorkflowState.displayName =
    'proto.scheduler.v1.FileWorkflowState'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scheduler.v1.FileWorkflowStateResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.scheduler.v1.FileWorkflowStateResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.scheduler.v1.FileWorkflowStateResponse.displayName =
    'proto.scheduler.v1.FileWorkflowStateResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.WorkflowRun.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.WorkflowRun.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.WorkflowRun} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.WorkflowRun.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        runid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        workflowid: jspb.Message.getFieldWithDefault(msg, 2, ''),
        status: jspb.Message.getFieldWithDefault(msg, 3, ''),
        requestedby: jspb.Message.getFieldWithDefault(msg, 4, ''),
        type: jspb.Message.getFieldWithDefault(msg, 5, ''),
        externalref: jspb.Message.getFieldWithDefault(msg, 6, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.WorkflowRun}
 */
proto.scheduler.v1.WorkflowRun.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.WorkflowRun()
  return proto.scheduler.v1.WorkflowRun.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.WorkflowRun} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.WorkflowRun}
 */
proto.scheduler.v1.WorkflowRun.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRunid(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setWorkflowid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setRequestedby(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setType(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setExternalref(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.WorkflowRun.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.WorkflowRun.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.WorkflowRun} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.WorkflowRun.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRunid()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getWorkflowid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getRequestedby()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getType()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getExternalref()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
}

/**
 * optional string runId = 1;
 * @return {string}
 */
proto.scheduler.v1.WorkflowRun.prototype.getRunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.WorkflowRun} returns this
 */
proto.scheduler.v1.WorkflowRun.prototype.setRunid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string workflowId = 2;
 * @return {string}
 */
proto.scheduler.v1.WorkflowRun.prototype.getWorkflowid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.WorkflowRun} returns this
 */
proto.scheduler.v1.WorkflowRun.prototype.setWorkflowid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string status = 3;
 * @return {string}
 */
proto.scheduler.v1.WorkflowRun.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.WorkflowRun} returns this
 */
proto.scheduler.v1.WorkflowRun.prototype.setStatus = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string requestedBy = 4;
 * @return {string}
 */
proto.scheduler.v1.WorkflowRun.prototype.getRequestedby = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.WorkflowRun} returns this
 */
proto.scheduler.v1.WorkflowRun.prototype.setRequestedby = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string type = 5;
 * @return {string}
 */
proto.scheduler.v1.WorkflowRun.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.WorkflowRun} returns this
 */
proto.scheduler.v1.WorkflowRun.prototype.setType = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string externalRef = 6;
 * @return {string}
 */
proto.scheduler.v1.WorkflowRun.prototype.getExternalref = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.WorkflowRun} returns this
 */
proto.scheduler.v1.WorkflowRun.prototype.setExternalref = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.FileRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.FileRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.FileRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.FileRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        requestedby: jspb.Message.getFieldWithDefault(msg, 1, ''),
        filename: jspb.Message.getFieldWithDefault(msg, 2, ''),
        org: jspb.Message.getFieldWithDefault(msg, 3, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.FileRequest}
 */
proto.scheduler.v1.FileRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.FileRequest()
  return proto.scheduler.v1.FileRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.FileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.FileRequest}
 */
proto.scheduler.v1.FileRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRequestedby(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setFilename(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setOrg(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.FileRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.FileRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.FileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.FileRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRequestedby()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getFilename()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getOrg()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
}

/**
 * optional string requestedBy = 1;
 * @return {string}
 */
proto.scheduler.v1.FileRequest.prototype.getRequestedby = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileRequest} returns this
 */
proto.scheduler.v1.FileRequest.prototype.setRequestedby = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string fileName = 2;
 * @return {string}
 */
proto.scheduler.v1.FileRequest.prototype.getFilename = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileRequest} returns this
 */
proto.scheduler.v1.FileRequest.prototype.setFilename = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string org = 3;
 * @return {string}
 */
proto.scheduler.v1.FileRequest.prototype.getOrg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileRequest} returns this
 */
proto.scheduler.v1.FileRequest.prototype.setOrg = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.RunResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.RunResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.RunResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.RunResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        run:
          (f = msg.getRun()) &&
          proto.scheduler.v1.WorkflowRun.toObject(includeInstance, f)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.RunResponse}
 */
proto.scheduler.v1.RunResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.RunResponse()
  return proto.scheduler.v1.RunResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.RunResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.RunResponse}
 */
proto.scheduler.v1.RunResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.scheduler.v1.WorkflowRun()
        reader.readMessage(
          value,
          proto.scheduler.v1.WorkflowRun.deserializeBinaryFromReader
        )
        msg.setRun(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.RunResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.RunResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.RunResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.RunResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getRun()
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.scheduler.v1.WorkflowRun.serializeBinaryToWriter
    )
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.scheduler.v1.RunResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.scheduler.v1.RunResponse} returns this
 */
proto.scheduler.v1.RunResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * optional WorkflowRun run = 2;
 * @return {?proto.scheduler.v1.WorkflowRun}
 */
proto.scheduler.v1.RunResponse.prototype.getRun = function () {
  return /** @type{?proto.scheduler.v1.WorkflowRun} */ (
    jspb.Message.getWrapperField(this, proto.scheduler.v1.WorkflowRun, 2)
  )
}

/**
 * @param {?proto.scheduler.v1.WorkflowRun|undefined} value
 * @return {!proto.scheduler.v1.RunResponse} returns this
 */
proto.scheduler.v1.RunResponse.prototype.setRun = function (value) {
  return jspb.Message.setWrapperField(this, 2, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.RunResponse} returns this
 */
proto.scheduler.v1.RunResponse.prototype.clearRun = function () {
  return this.setRun(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.RunResponse.prototype.hasRun = function () {
  return jspb.Message.getField(this, 2) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.RunRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.RunRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.RunRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.RunRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        runid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        workflowid: jspb.Message.getFieldWithDefault(msg, 2, ''),
        requestedby: jspb.Message.getFieldWithDefault(msg, 3, ''),
        type: jspb.Message.getFieldWithDefault(msg, 4, ''),
        externalref: jspb.Message.getFieldWithDefault(msg, 5, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.RunRequest}
 */
proto.scheduler.v1.RunRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.RunRequest()
  return proto.scheduler.v1.RunRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.RunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.RunRequest}
 */
proto.scheduler.v1.RunRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRunid(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setWorkflowid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setRequestedby(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setType(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setExternalref(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.RunRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.RunRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.RunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.RunRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRunid()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getWorkflowid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getRequestedby()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getType()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getExternalref()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
}

/**
 * optional string runId = 1;
 * @return {string}
 */
proto.scheduler.v1.RunRequest.prototype.getRunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.RunRequest} returns this
 */
proto.scheduler.v1.RunRequest.prototype.setRunid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string workflowId = 2;
 * @return {string}
 */
proto.scheduler.v1.RunRequest.prototype.getWorkflowid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.RunRequest} returns this
 */
proto.scheduler.v1.RunRequest.prototype.setWorkflowid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string requestedBy = 3;
 * @return {string}
 */
proto.scheduler.v1.RunRequest.prototype.getRequestedby = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.RunRequest} returns this
 */
proto.scheduler.v1.RunRequest.prototype.setRequestedby = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string type = 4;
 * @return {string}
 */
proto.scheduler.v1.RunRequest.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.RunRequest} returns this
 */
proto.scheduler.v1.RunRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string externalRef = 5;
 * @return {string}
 */
proto.scheduler.v1.RunRequest.prototype.getExternalref = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.RunRequest} returns this
 */
proto.scheduler.v1.RunRequest.prototype.setExternalref = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.UpdateRunRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.UpdateRunRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.UpdateRunRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.UpdateRunRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        status: jspb.Message.getFieldWithDefault(msg, 1, ''),
        runid: jspb.Message.getFieldWithDefault(msg, 2, ''),
        workflowid: jspb.Message.getFieldWithDefault(msg, 3, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.UpdateRunRequest}
 */
proto.scheduler.v1.UpdateRunRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.UpdateRunRequest()
  return proto.scheduler.v1.UpdateRunRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.UpdateRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.UpdateRunRequest}
 */
proto.scheduler.v1.UpdateRunRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setRunid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setWorkflowid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.UpdateRunRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.UpdateRunRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.UpdateRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.UpdateRunRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getRunid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getWorkflowid()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
}

/**
 * optional string status = 1;
 * @return {string}
 */
proto.scheduler.v1.UpdateRunRequest.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.UpdateRunRequest} returns this
 */
proto.scheduler.v1.UpdateRunRequest.prototype.setStatus = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string runId = 2;
 * @return {string}
 */
proto.scheduler.v1.UpdateRunRequest.prototype.getRunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.UpdateRunRequest} returns this
 */
proto.scheduler.v1.UpdateRunRequest.prototype.setRunid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string workflowId = 3;
 * @return {string}
 */
proto.scheduler.v1.UpdateRunRequest.prototype.getWorkflowid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.UpdateRunRequest} returns this
 */
proto.scheduler.v1.UpdateRunRequest.prototype.setWorkflowid = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.DeleteRunRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.DeleteRunRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.DeleteRunRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.DeleteRunRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.DeleteRunRequest}
 */
proto.scheduler.v1.DeleteRunRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.DeleteRunRequest()
  return proto.scheduler.v1.DeleteRunRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.DeleteRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.DeleteRunRequest}
 */
proto.scheduler.v1.DeleteRunRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.DeleteRunRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.DeleteRunRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.DeleteRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.DeleteRunRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.scheduler.v1.DeleteRunRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.DeleteRunRequest} returns this
 */
proto.scheduler.v1.DeleteRunRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.SearchRunRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.SearchRunRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.SearchRunRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.SearchRunRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        runid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        workflowid: jspb.Message.getFieldWithDefault(msg, 2, ''),
        status: jspb.Message.getFieldWithDefault(msg, 3, ''),
        type: jspb.Message.getFieldWithDefault(msg, 4, ''),
        externalref: jspb.Message.getFieldWithDefault(msg, 5, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.SearchRunRequest}
 */
proto.scheduler.v1.SearchRunRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.SearchRunRequest()
  return proto.scheduler.v1.SearchRunRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.SearchRunRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.SearchRunRequest}
 */
proto.scheduler.v1.SearchRunRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRunid(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setWorkflowid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setType(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setExternalref(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.SearchRunRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.SearchRunRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.SearchRunRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.SearchRunRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRunid()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getWorkflowid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getType()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getExternalref()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
}

/**
 * optional string runId = 1;
 * @return {string}
 */
proto.scheduler.v1.SearchRunRequest.prototype.getRunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SearchRunRequest} returns this
 */
proto.scheduler.v1.SearchRunRequest.prototype.setRunid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string workflowId = 2;
 * @return {string}
 */
proto.scheduler.v1.SearchRunRequest.prototype.getWorkflowid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SearchRunRequest} returns this
 */
proto.scheduler.v1.SearchRunRequest.prototype.setWorkflowid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string status = 3;
 * @return {string}
 */
proto.scheduler.v1.SearchRunRequest.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SearchRunRequest} returns this
 */
proto.scheduler.v1.SearchRunRequest.prototype.setStatus = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string type = 4;
 * @return {string}
 */
proto.scheduler.v1.SearchRunRequest.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SearchRunRequest} returns this
 */
proto.scheduler.v1.SearchRunRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string externalRef = 5;
 * @return {string}
 */
proto.scheduler.v1.SearchRunRequest.prototype.getExternalref = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SearchRunRequest} returns this
 */
proto.scheduler.v1.SearchRunRequest.prototype.setExternalref = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scheduler.v1.RunsResponse.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.RunsResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.RunsResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.RunsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.RunsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        runsList: jspb.Message.toObjectList(
          msg.getRunsList(),
          proto.scheduler.v1.WorkflowRun.toObject,
          includeInstance
        )
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.RunsResponse}
 */
proto.scheduler.v1.RunsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.RunsResponse()
  return proto.scheduler.v1.RunsResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.RunsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.RunsResponse}
 */
proto.scheduler.v1.RunsResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.scheduler.v1.WorkflowRun()
        reader.readMessage(
          value,
          proto.scheduler.v1.WorkflowRun.deserializeBinaryFromReader
        )
        msg.addRuns(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.RunsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.RunsResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.RunsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.RunsResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getRunsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.scheduler.v1.WorkflowRun.serializeBinaryToWriter
    )
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.scheduler.v1.RunsResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.scheduler.v1.RunsResponse} returns this
 */
proto.scheduler.v1.RunsResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * repeated WorkflowRun runs = 2;
 * @return {!Array<!proto.scheduler.v1.WorkflowRun>}
 */
proto.scheduler.v1.RunsResponse.prototype.getRunsList = function () {
  return /** @type{!Array<!proto.scheduler.v1.WorkflowRun>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.scheduler.v1.WorkflowRun,
      2
    )
  )
}

/**
 * @param {!Array<!proto.scheduler.v1.WorkflowRun>} value
 * @return {!proto.scheduler.v1.RunsResponse} returns this
 */
proto.scheduler.v1.RunsResponse.prototype.setRunsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value)
}

/**
 * @param {!proto.scheduler.v1.WorkflowRun=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scheduler.v1.WorkflowRun}
 */
proto.scheduler.v1.RunsResponse.prototype.addRuns = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.scheduler.v1.WorkflowRun,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scheduler.v1.RunsResponse} returns this
 */
proto.scheduler.v1.RunsResponse.prototype.clearRunsList = function () {
  return this.setRunsList([])
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.DeleteResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.DeleteResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.DeleteResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.DeleteResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.DeleteResponse}
 */
proto.scheduler.v1.DeleteResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.DeleteResponse()
  return proto.scheduler.v1.DeleteResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.DeleteResponse}
 */
proto.scheduler.v1.DeleteResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.DeleteResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.DeleteResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.DeleteResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.scheduler.v1.DeleteResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.scheduler.v1.DeleteResponse} returns this
 */
proto.scheduler.v1.DeleteResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.BusinessAgent.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.BusinessAgent.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.BusinessAgent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.BusinessAgent.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        entityid: jspb.Message.getFieldWithDefault(msg, 2, 0),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        org: jspb.Message.getFieldWithDefault(msg, 4, ''),
        firstname: jspb.Message.getFieldWithDefault(msg, 5, ''),
        middlename: jspb.Message.getFieldWithDefault(msg, 6, ''),
        lastname: jspb.Message.getFieldWithDefault(msg, 7, ''),
        address: jspb.Message.getFieldWithDefault(msg, 8, ''),
        agenttype: jspb.Message.getFieldWithDefault(msg, 9, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.BusinessAgent}
 */
proto.scheduler.v1.BusinessAgent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.BusinessAgent()
  return proto.scheduler.v1.BusinessAgent.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.BusinessAgent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.BusinessAgent}
 */
proto.scheduler.v1.BusinessAgent.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setEntityid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setName(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setOrg(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setFirstname(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setMiddlename(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setLastname(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setAddress(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setAgenttype(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.BusinessAgent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.BusinessAgent.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.BusinessAgent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.BusinessAgent.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEntityid()
  if (f !== 0) {
    writer.writeUint64(2, f)
  }
  f = message.getName()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getOrg()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getFirstname()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getMiddlename()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getLastname()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getAddress()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = message.getAgenttype()
  if (f.length > 0) {
    writer.writeString(9, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional uint64 entityId = 2;
 * @return {number}
 */
proto.scheduler.v1.BusinessAgent.prototype.getEntityid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setEntityid = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

/**
 * optional string name = 3;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string org = 4;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getOrg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setOrg = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string firstName = 5;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getFirstname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setFirstname = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string middleName = 6;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getMiddlename = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setMiddlename = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string lastName = 7;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getLastname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setLastname = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string address = 8;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getAddress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setAddress = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

/**
 * optional string agentType = 9;
 * @return {string}
 */
proto.scheduler.v1.BusinessAgent.prototype.getAgenttype = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessAgent} returns this
 */
proto.scheduler.v1.BusinessAgent.prototype.setAgenttype = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.BusinessPrincipal.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.BusinessPrincipal.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.BusinessPrincipal} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.BusinessPrincipal.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        entityid: jspb.Message.getFieldWithDefault(msg, 2, 0),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        org: jspb.Message.getFieldWithDefault(msg, 4, ''),
        firstname: jspb.Message.getFieldWithDefault(msg, 5, ''),
        middlename: jspb.Message.getFieldWithDefault(msg, 6, ''),
        lastname: jspb.Message.getFieldWithDefault(msg, 7, ''),
        address: jspb.Message.getFieldWithDefault(msg, 8, ''),
        positiontype: jspb.Message.getFieldWithDefault(msg, 9, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.BusinessPrincipal}
 */
proto.scheduler.v1.BusinessPrincipal.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.BusinessPrincipal()
  return proto.scheduler.v1.BusinessPrincipal.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.BusinessPrincipal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.BusinessPrincipal}
 */
proto.scheduler.v1.BusinessPrincipal.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setEntityid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setName(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setOrg(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setFirstname(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setMiddlename(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setLastname(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setAddress(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setPositiontype(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.BusinessPrincipal.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.BusinessPrincipal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.BusinessPrincipal.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEntityid()
  if (f !== 0) {
    writer.writeUint64(2, f)
  }
  f = message.getName()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getOrg()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getFirstname()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getMiddlename()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getLastname()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getAddress()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = message.getPositiontype()
  if (f.length > 0) {
    writer.writeString(9, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional uint64 entityId = 2;
 * @return {number}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getEntityid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setEntityid = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

/**
 * optional string name = 3;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string org = 4;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getOrg = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setOrg = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string firstName = 5;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getFirstname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setFirstname = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string middleName = 6;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getMiddlename = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setMiddlename = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string lastName = 7;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getLastname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setLastname = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string address = 8;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getAddress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setAddress = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

/**
 * optional string positionType = 9;
 * @return {string}
 */
proto.scheduler.v1.BusinessPrincipal.prototype.getPositiontype = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessPrincipal} returns this
 */
proto.scheduler.v1.BusinessPrincipal.prototype.setPositiontype = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 9, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.BusinessFiling.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.BusinessFiling.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.BusinessFiling} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.BusinessFiling.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        entityid: jspb.Message.getFieldWithDefault(msg, 2, 0),
        name: jspb.Message.getFieldWithDefault(msg, 3, ''),
        initialfilingdate: jspb.Message.getFieldWithDefault(msg, 4, 0),
        jurisdiction: jspb.Message.getFieldWithDefault(msg, 5, ''),
        status: jspb.Message.getFieldWithDefault(msg, 6, ''),
        sos: jspb.Message.getFieldWithDefault(msg, 7, ''),
        type: jspb.Message.getFieldWithDefault(msg, 8, ''),
        filingtype: jspb.Message.getFieldWithDefault(msg, 9, ''),
        foreignname: jspb.Message.getFieldWithDefault(msg, 10, ''),
        ftb: jspb.Message.getFieldWithDefault(msg, 11, ''),
        vcfcf: jspb.Message.getFieldWithDefault(msg, 12, ''),
        suspensiondate: jspb.Message.getFieldWithDefault(msg, 13, 0),
        lastfilednum: jspb.Message.getFieldWithDefault(msg, 14, ''),
        lastfileddate: jspb.Message.getFieldWithDefault(msg, 15, 0),
        principaladdress: jspb.Message.getFieldWithDefault(msg, 16, ''),
        mailingaddress: jspb.Message.getFieldWithDefault(msg, 17, ''),
        localaddress: jspb.Message.getFieldWithDefault(msg, 18, ''),
        managementstructure: jspb.Message.getFieldWithDefault(msg, 19, ''),
        businesstype: jspb.Message.getFieldWithDefault(msg, 20, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.BusinessFiling}
 */
proto.scheduler.v1.BusinessFiling.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.BusinessFiling()
  return proto.scheduler.v1.BusinessFiling.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.BusinessFiling} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.BusinessFiling}
 */
proto.scheduler.v1.BusinessFiling.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setEntityid(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setName(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setInitialfilingdate(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setJurisdiction(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setStatus(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setSos(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setType(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setFilingtype(value)
        break
      case 10:
        var value = /** @type {string} */ (reader.readString())
        msg.setForeignname(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.setFtb(value)
        break
      case 12:
        var value = /** @type {string} */ (reader.readString())
        msg.setVcfcf(value)
        break
      case 13:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setSuspensiondate(value)
        break
      case 14:
        var value = /** @type {string} */ (reader.readString())
        msg.setLastfilednum(value)
        break
      case 15:
        var value = /** @type {number} */ (reader.readUint64())
        msg.setLastfileddate(value)
        break
      case 16:
        var value = /** @type {string} */ (reader.readString())
        msg.setPrincipaladdress(value)
        break
      case 17:
        var value = /** @type {string} */ (reader.readString())
        msg.setMailingaddress(value)
        break
      case 18:
        var value = /** @type {string} */ (reader.readString())
        msg.setLocaladdress(value)
        break
      case 19:
        var value = /** @type {string} */ (reader.readString())
        msg.setManagementstructure(value)
        break
      case 20:
        var value = /** @type {string} */ (reader.readString())
        msg.setBusinesstype(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.BusinessFiling.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.BusinessFiling.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.BusinessFiling} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.BusinessFiling.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEntityid()
  if (f !== 0) {
    writer.writeUint64(2, f)
  }
  f = message.getName()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getInitialfilingdate()
  if (f !== 0) {
    writer.writeUint64(4, f)
  }
  f = message.getJurisdiction()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getStatus()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getSos()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getType()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = message.getFilingtype()
  if (f.length > 0) {
    writer.writeString(9, f)
  }
  f = message.getForeignname()
  if (f.length > 0) {
    writer.writeString(10, f)
  }
  f = message.getFtb()
  if (f.length > 0) {
    writer.writeString(11, f)
  }
  f = message.getVcfcf()
  if (f.length > 0) {
    writer.writeString(12, f)
  }
  f = message.getSuspensiondate()
  if (f !== 0) {
    writer.writeUint64(13, f)
  }
  f = message.getLastfilednum()
  if (f.length > 0) {
    writer.writeString(14, f)
  }
  f = message.getLastfileddate()
  if (f !== 0) {
    writer.writeUint64(15, f)
  }
  f = message.getPrincipaladdress()
  if (f.length > 0) {
    writer.writeString(16, f)
  }
  f = message.getMailingaddress()
  if (f.length > 0) {
    writer.writeString(17, f)
  }
  f = message.getLocaladdress()
  if (f.length > 0) {
    writer.writeString(18, f)
  }
  f = message.getManagementstructure()
  if (f.length > 0) {
    writer.writeString(19, f)
  }
  f = message.getBusinesstype()
  if (f.length > 0) {
    writer.writeString(20, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional uint64 entityId = 2;
 * @return {number}
 */
proto.scheduler.v1.BusinessFiling.prototype.getEntityid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0))
}

/**
 * @param {number} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setEntityid = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value)
}

/**
 * optional string name = 3;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional uint64 initialFilingDate = 4;
 * @return {number}
 */
proto.scheduler.v1.BusinessFiling.prototype.getInitialfilingdate = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0))
}

/**
 * @param {number} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setInitialfilingdate = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 4, value)
}

/**
 * optional string jurisdiction = 5;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getJurisdiction = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setJurisdiction = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string status = 6;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setStatus = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string sos = 7;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getSos = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setSos = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string type = 8;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setType = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

/**
 * optional string filingType = 9;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getFilingtype = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setFilingtype = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value)
}

/**
 * optional string foreignName = 10;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getForeignname = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setForeignname = function (value) {
  return jspb.Message.setProto3StringField(this, 10, value)
}

/**
 * optional string ftb = 11;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getFtb = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setFtb = function (value) {
  return jspb.Message.setProto3StringField(this, 11, value)
}

/**
 * optional string vcfcf = 12;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getVcfcf = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setVcfcf = function (value) {
  return jspb.Message.setProto3StringField(this, 12, value)
}

/**
 * optional uint64 suspensionDate = 13;
 * @return {number}
 */
proto.scheduler.v1.BusinessFiling.prototype.getSuspensiondate = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0))
}

/**
 * @param {number} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setSuspensiondate = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 13, value)
}

/**
 * optional string lastFiledNum = 14;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getLastfilednum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setLastfilednum = function (value) {
  return jspb.Message.setProto3StringField(this, 14, value)
}

/**
 * optional uint64 lastFiledDate = 15;
 * @return {number}
 */
proto.scheduler.v1.BusinessFiling.prototype.getLastfileddate = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0))
}

/**
 * @param {number} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setLastfileddate = function (
  value
) {
  return jspb.Message.setProto3IntField(this, 15, value)
}

/**
 * optional string principalAddress = 16;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getPrincipaladdress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setPrincipaladdress = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 16, value)
}

/**
 * optional string mailingAddress = 17;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getMailingaddress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setMailingaddress = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 17, value)
}

/**
 * optional string localAddress = 18;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getLocaladdress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setLocaladdress = function (value) {
  return jspb.Message.setProto3StringField(this, 18, value)
}

/**
 * optional string managementStructure = 19;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getManagementstructure =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 19, '')
    )
  }

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setManagementstructure = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 19, value)
}

/**
 * optional string businessType = 20;
 * @return {string}
 */
proto.scheduler.v1.BusinessFiling.prototype.getBusinesstype = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BusinessFiling} returns this
 */
proto.scheduler.v1.BusinessFiling.prototype.setBusinesstype = function (value) {
  return jspb.Message.setProto3StringField(this, 20, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.AddEntityRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.AddEntityRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.AddEntityRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.AddEntityRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        fieldsMap: (f = msg.getFieldsMap())
          ? f.toObject(includeInstance, undefined)
          : [],
        type: jspb.Message.getFieldWithDefault(msg, 2, 0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.AddEntityRequest}
 */
proto.scheduler.v1.AddEntityRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.AddEntityRequest()
  return proto.scheduler.v1.AddEntityRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.AddEntityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.AddEntityRequest}
 */
proto.scheduler.v1.AddEntityRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = msg.getFieldsMap()
        reader.readMessage(value, function (message, reader) {
          jspb.Map.deserializeBinary(
            message,
            reader,
            jspb.BinaryReader.prototype.readString,
            jspb.BinaryReader.prototype.readString,
            null,
            '',
            ''
          )
        })
        break
      case 2:
        var value = /** @type {!proto.scheduler.v1.EntityType} */ (
          reader.readEnum()
        )
        msg.setType(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.AddEntityRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.AddEntityRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.AddEntityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.AddEntityRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getFieldsMap(true)
  if (f && f.getLength() > 0) {
    f.serializeBinary(
      1,
      writer,
      jspb.BinaryWriter.prototype.writeString,
      jspb.BinaryWriter.prototype.writeString
    )
  }
  f = message.getType()
  if (f !== 0.0) {
    writer.writeEnum(2, f)
  }
}

/**
 * map<string, string> fields = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.scheduler.v1.AddEntityRequest.prototype.getFieldsMap = function (
  opt_noLazyCreate
) {
  return /** @type {!jspb.Map<string,string>} */ (
    jspb.Message.getMapField(this, 1, opt_noLazyCreate, null)
  )
}

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.scheduler.v1.AddEntityRequest} returns this
 */
proto.scheduler.v1.AddEntityRequest.prototype.clearFieldsMap = function () {
  this.getFieldsMap().clear()
  return this
}

/**
 * optional EntityType type = 2;
 * @return {!proto.scheduler.v1.EntityType}
 */
proto.scheduler.v1.AddEntityRequest.prototype.getType = function () {
  return /** @type {!proto.scheduler.v1.EntityType} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  )
}

/**
 * @param {!proto.scheduler.v1.EntityType} value
 * @return {!proto.scheduler.v1.AddEntityRequest} returns this
 */
proto.scheduler.v1.AddEntityRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.DeleteEntityRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.DeleteEntityRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.DeleteEntityRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.DeleteEntityRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        type: jspb.Message.getFieldWithDefault(msg, 2, 0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.DeleteEntityRequest}
 */
proto.scheduler.v1.DeleteEntityRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.DeleteEntityRequest()
  return proto.scheduler.v1.DeleteEntityRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.DeleteEntityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.DeleteEntityRequest}
 */
proto.scheduler.v1.DeleteEntityRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {!proto.scheduler.v1.EntityType} */ (
          reader.readEnum()
        )
        msg.setType(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.DeleteEntityRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.DeleteEntityRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.DeleteEntityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.DeleteEntityRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getType()
  if (f !== 0.0) {
    writer.writeEnum(2, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.scheduler.v1.DeleteEntityRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.DeleteEntityRequest} returns this
 */
proto.scheduler.v1.DeleteEntityRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional EntityType type = 2;
 * @return {!proto.scheduler.v1.EntityType}
 */
proto.scheduler.v1.DeleteEntityRequest.prototype.getType = function () {
  return /** @type {!proto.scheduler.v1.EntityType} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  )
}

/**
 * @param {!proto.scheduler.v1.EntityType} value
 * @return {!proto.scheduler.v1.DeleteEntityRequest} returns this
 */
proto.scheduler.v1.DeleteEntityRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value)
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.scheduler.v1.AddEntityResponse.oneofGroups_ = [[2, 3, 4]]

/**
 * @enum {number}
 */
proto.scheduler.v1.AddEntityResponse.TestOneofCase = {
  TEST_ONEOF_NOT_SET: 0,
  AGENT: 2,
  PRINCIPAL: 3,
  FILING: 4
}

/**
 * @return {proto.scheduler.v1.AddEntityResponse.TestOneofCase}
 */
proto.scheduler.v1.AddEntityResponse.prototype.getTestOneofCase = function () {
  return /** @type {proto.scheduler.v1.AddEntityResponse.TestOneofCase} */ (
    jspb.Message.computeOneofCase(
      this,
      proto.scheduler.v1.AddEntityResponse.oneofGroups_[0]
    )
  )
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.AddEntityResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.AddEntityResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.AddEntityResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.AddEntityResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        agent:
          (f = msg.getAgent()) &&
          proto.scheduler.v1.BusinessAgent.toObject(includeInstance, f),
        principal:
          (f = msg.getPrincipal()) &&
          proto.scheduler.v1.BusinessPrincipal.toObject(includeInstance, f),
        filing:
          (f = msg.getFiling()) &&
          proto.scheduler.v1.BusinessFiling.toObject(includeInstance, f)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.AddEntityResponse}
 */
proto.scheduler.v1.AddEntityResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.AddEntityResponse()
  return proto.scheduler.v1.AddEntityResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.AddEntityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.AddEntityResponse}
 */
proto.scheduler.v1.AddEntityResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.scheduler.v1.BusinessAgent()
        reader.readMessage(
          value,
          proto.scheduler.v1.BusinessAgent.deserializeBinaryFromReader
        )
        msg.setAgent(value)
        break
      case 3:
        var value = new proto.scheduler.v1.BusinessPrincipal()
        reader.readMessage(
          value,
          proto.scheduler.v1.BusinessPrincipal.deserializeBinaryFromReader
        )
        msg.setPrincipal(value)
        break
      case 4:
        var value = new proto.scheduler.v1.BusinessFiling()
        reader.readMessage(
          value,
          proto.scheduler.v1.BusinessFiling.deserializeBinaryFromReader
        )
        msg.setFiling(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.AddEntityResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.AddEntityResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.AddEntityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.AddEntityResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getAgent()
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.scheduler.v1.BusinessAgent.serializeBinaryToWriter
    )
  }
  f = message.getPrincipal()
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.scheduler.v1.BusinessPrincipal.serializeBinaryToWriter
    )
  }
  f = message.getFiling()
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.scheduler.v1.BusinessFiling.serializeBinaryToWriter
    )
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.scheduler.v1.AddEntityResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * optional BusinessAgent agent = 2;
 * @return {?proto.scheduler.v1.BusinessAgent}
 */
proto.scheduler.v1.AddEntityResponse.prototype.getAgent = function () {
  return /** @type{?proto.scheduler.v1.BusinessAgent} */ (
    jspb.Message.getWrapperField(this, proto.scheduler.v1.BusinessAgent, 2)
  )
}

/**
 * @param {?proto.scheduler.v1.BusinessAgent|undefined} value
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.setAgent = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    2,
    proto.scheduler.v1.AddEntityResponse.oneofGroups_[0],
    value
  )
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.clearAgent = function () {
  return this.setAgent(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.AddEntityResponse.prototype.hasAgent = function () {
  return jspb.Message.getField(this, 2) != null
}

/**
 * optional BusinessPrincipal principal = 3;
 * @return {?proto.scheduler.v1.BusinessPrincipal}
 */
proto.scheduler.v1.AddEntityResponse.prototype.getPrincipal = function () {
  return /** @type{?proto.scheduler.v1.BusinessPrincipal} */ (
    jspb.Message.getWrapperField(this, proto.scheduler.v1.BusinessPrincipal, 3)
  )
}

/**
 * @param {?proto.scheduler.v1.BusinessPrincipal|undefined} value
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.setPrincipal = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    3,
    proto.scheduler.v1.AddEntityResponse.oneofGroups_[0],
    value
  )
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.clearPrincipal = function () {
  return this.setPrincipal(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.AddEntityResponse.prototype.hasPrincipal = function () {
  return jspb.Message.getField(this, 3) != null
}

/**
 * optional BusinessFiling filing = 4;
 * @return {?proto.scheduler.v1.BusinessFiling}
 */
proto.scheduler.v1.AddEntityResponse.prototype.getFiling = function () {
  return /** @type{?proto.scheduler.v1.BusinessFiling} */ (
    jspb.Message.getWrapperField(this, proto.scheduler.v1.BusinessFiling, 4)
  )
}

/**
 * @param {?proto.scheduler.v1.BusinessFiling|undefined} value
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.setFiling = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    4,
    proto.scheduler.v1.AddEntityResponse.oneofGroups_[0],
    value
  )
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.AddEntityResponse} returns this
 */
proto.scheduler.v1.AddEntityResponse.prototype.clearFiling = function () {
  return this.setFiling(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.AddEntityResponse.prototype.hasFiling = function () {
  return jspb.Message.getField(this, 4) != null
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.scheduler.v1.StreamAddEntityResponse.oneofGroups_ = [[1, 2]]

/**
 * @enum {number}
 */
proto.scheduler.v1.StreamAddEntityResponse.TestOneofCase = {
  TEST_ONEOF_NOT_SET: 0,
  ENTITYRESPONSE: 1,
  ERROR: 2
}

/**
 * @return {proto.scheduler.v1.StreamAddEntityResponse.TestOneofCase}
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.getTestOneofCase =
  function () {
    return /** @type {proto.scheduler.v1.StreamAddEntityResponse.TestOneofCase} */ (
      jspb.Message.computeOneofCase(
        this,
        proto.scheduler.v1.StreamAddEntityResponse.oneofGroups_[0]
      )
    )
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.StreamAddEntityResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.StreamAddEntityResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.StreamAddEntityResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.StreamAddEntityResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        entityresponse:
          (f = msg.getEntityresponse()) &&
          proto.scheduler.v1.AddEntityResponse.toObject(includeInstance, f),
        error:
          (f = msg.getError()) &&
          api_google_rpc_status_pb.Status.toObject(includeInstance, f)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.StreamAddEntityResponse}
 */
proto.scheduler.v1.StreamAddEntityResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.StreamAddEntityResponse()
  return proto.scheduler.v1.StreamAddEntityResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.StreamAddEntityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.StreamAddEntityResponse}
 */
proto.scheduler.v1.StreamAddEntityResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new proto.scheduler.v1.AddEntityResponse()
          reader.readMessage(
            value,
            proto.scheduler.v1.AddEntityResponse.deserializeBinaryFromReader
          )
          msg.setEntityresponse(value)
          break
        case 2:
          var value = new api_google_rpc_status_pb.Status()
          reader.readMessage(
            value,
            api_google_rpc_status_pb.Status.deserializeBinaryFromReader
          )
          msg.setError(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.scheduler.v1.StreamAddEntityResponse.serializeBinaryToWriter(
      this,
      writer
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.StreamAddEntityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.StreamAddEntityResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getEntityresponse()
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.scheduler.v1.AddEntityResponse.serializeBinaryToWriter
    )
  }
  f = message.getError()
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      api_google_rpc_status_pb.Status.serializeBinaryToWriter
    )
  }
}

/**
 * optional AddEntityResponse entityResponse = 1;
 * @return {?proto.scheduler.v1.AddEntityResponse}
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.getEntityresponse =
  function () {
    return /** @type{?proto.scheduler.v1.AddEntityResponse} */ (
      jspb.Message.getWrapperField(
        this,
        proto.scheduler.v1.AddEntityResponse,
        1
      )
    )
  }

/**
 * @param {?proto.scheduler.v1.AddEntityResponse|undefined} value
 * @return {!proto.scheduler.v1.StreamAddEntityResponse} returns this
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.setEntityresponse =
  function (value) {
    return jspb.Message.setOneofWrapperField(
      this,
      1,
      proto.scheduler.v1.StreamAddEntityResponse.oneofGroups_[0],
      value
    )
  }

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.StreamAddEntityResponse} returns this
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.clearEntityresponse =
  function () {
    return this.setEntityresponse(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.hasEntityresponse =
  function () {
    return jspb.Message.getField(this, 1) != null
  }

/**
 * optional google.rpc.Status error = 2;
 * @return {?proto.google.rpc.Status}
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.getError = function () {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, api_google_rpc_status_pb.Status, 2)
  )
}

/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.scheduler.v1.StreamAddEntityResponse} returns this
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.setError = function (
  value
) {
  return jspb.Message.setOneofWrapperField(
    this,
    2,
    proto.scheduler.v1.StreamAddEntityResponse.oneofGroups_[0],
    value
  )
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.StreamAddEntityResponse} returns this
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.clearError = function () {
  return this.setError(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.StreamAddEntityResponse.prototype.hasError = function () {
  return jspb.Message.getField(this, 2) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.FileSignalRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.FileSignalRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.FileSignalRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.FileSignalRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        filepath: jspb.Message.getFieldWithDefault(msg, 1, ''),
        requestedby: jspb.Message.getFieldWithDefault(msg, 2, ''),
        type: jspb.Message.getFieldWithDefault(msg, 3, 0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.FileSignalRequest}
 */
proto.scheduler.v1.FileSignalRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.FileSignalRequest()
  return proto.scheduler.v1.FileSignalRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.FileSignalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.FileSignalRequest}
 */
proto.scheduler.v1.FileSignalRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setFilepath(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setRequestedby(value)
        break
      case 3:
        var value = /** @type {!proto.scheduler.v1.EntityType} */ (
          reader.readEnum()
        )
        msg.setType(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.FileSignalRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.FileSignalRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.FileSignalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.FileSignalRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getFilepath()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getRequestedby()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getType()
  if (f !== 0.0) {
    writer.writeEnum(3, f)
  }
}

/**
 * optional string filePath = 1;
 * @return {string}
 */
proto.scheduler.v1.FileSignalRequest.prototype.getFilepath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileSignalRequest} returns this
 */
proto.scheduler.v1.FileSignalRequest.prototype.setFilepath = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string requestedBy = 2;
 * @return {string}
 */
proto.scheduler.v1.FileSignalRequest.prototype.getRequestedby = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileSignalRequest} returns this
 */
proto.scheduler.v1.FileSignalRequest.prototype.setRequestedby = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional EntityType type = 3;
 * @return {!proto.scheduler.v1.EntityType}
 */
proto.scheduler.v1.FileSignalRequest.prototype.getType = function () {
  return /** @type {!proto.scheduler.v1.EntityType} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  )
}

/**
 * @param {!proto.scheduler.v1.EntityType} value
 * @return {!proto.scheduler.v1.FileSignalRequest} returns this
 */
proto.scheduler.v1.FileSignalRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.QueryWorkflowRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.QueryWorkflowRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.QueryWorkflowRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.QueryWorkflowRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        runid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        workflowid: jspb.Message.getFieldWithDefault(msg, 2, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.QueryWorkflowRequest}
 */
proto.scheduler.v1.QueryWorkflowRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.QueryWorkflowRequest()
  return proto.scheduler.v1.QueryWorkflowRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.QueryWorkflowRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.QueryWorkflowRequest}
 */
proto.scheduler.v1.QueryWorkflowRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRunid(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setWorkflowid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.QueryWorkflowRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.scheduler.v1.QueryWorkflowRequest.serializeBinaryToWriter(
      this,
      writer
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.QueryWorkflowRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.QueryWorkflowRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRunid()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getWorkflowid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
}

/**
 * optional string runId = 1;
 * @return {string}
 */
proto.scheduler.v1.QueryWorkflowRequest.prototype.getRunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.QueryWorkflowRequest} returns this
 */
proto.scheduler.v1.QueryWorkflowRequest.prototype.setRunid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string workflowId = 2;
 * @return {string}
 */
proto.scheduler.v1.QueryWorkflowRequest.prototype.getWorkflowid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.QueryWorkflowRequest} returns this
 */
proto.scheduler.v1.QueryWorkflowRequest.prototype.setWorkflowid = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.SuccessResultState.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.SuccessResultState.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.SuccessResultState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.SuccessResultState.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        start: jspb.Message.getFieldWithDefault(msg, 1, ''),
        end: jspb.Message.getFieldWithDefault(msg, 2, ''),
        resultid: jspb.Message.getFieldWithDefault(msg, 3, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.SuccessResultState}
 */
proto.scheduler.v1.SuccessResultState.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.SuccessResultState()
  return proto.scheduler.v1.SuccessResultState.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.SuccessResultState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.SuccessResultState}
 */
proto.scheduler.v1.SuccessResultState.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setStart(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setEnd(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setResultid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.SuccessResultState.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.SuccessResultState.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.SuccessResultState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.SuccessResultState.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getStart()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEnd()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getResultid()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
}

/**
 * optional string start = 1;
 * @return {string}
 */
proto.scheduler.v1.SuccessResultState.prototype.getStart = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SuccessResultState} returns this
 */
proto.scheduler.v1.SuccessResultState.prototype.setStart = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string end = 2;
 * @return {string}
 */
proto.scheduler.v1.SuccessResultState.prototype.getEnd = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SuccessResultState} returns this
 */
proto.scheduler.v1.SuccessResultState.prototype.setEnd = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string resultId = 3;
 * @return {string}
 */
proto.scheduler.v1.SuccessResultState.prototype.getResultid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.SuccessResultState} returns this
 */
proto.scheduler.v1.SuccessResultState.prototype.setResultid = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.ErrorResultState.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.ErrorResultState.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.ErrorResultState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.ErrorResultState.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        start: jspb.Message.getFieldWithDefault(msg, 1, ''),
        end: jspb.Message.getFieldWithDefault(msg, 2, ''),
        error: jspb.Message.getFieldWithDefault(msg, 3, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.ErrorResultState}
 */
proto.scheduler.v1.ErrorResultState.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.ErrorResultState()
  return proto.scheduler.v1.ErrorResultState.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.ErrorResultState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.ErrorResultState}
 */
proto.scheduler.v1.ErrorResultState.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setStart(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setEnd(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setError(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.ErrorResultState.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.ErrorResultState.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.ErrorResultState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.ErrorResultState.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getStart()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEnd()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getError()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
}

/**
 * optional string start = 1;
 * @return {string}
 */
proto.scheduler.v1.ErrorResultState.prototype.getStart = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.ErrorResultState} returns this
 */
proto.scheduler.v1.ErrorResultState.prototype.setStart = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string end = 2;
 * @return {string}
 */
proto.scheduler.v1.ErrorResultState.prototype.getEnd = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.ErrorResultState} returns this
 */
proto.scheduler.v1.ErrorResultState.prototype.setEnd = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string error = 3;
 * @return {string}
 */
proto.scheduler.v1.ErrorResultState.prototype.getError = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.ErrorResultState} returns this
 */
proto.scheduler.v1.ErrorResultState.prototype.setError = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scheduler.v1.HeaderState.repeatedFields_ = [1]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.HeaderState.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.HeaderState.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.HeaderState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.HeaderState.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        headersList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
        offset: jspb.Message.getFieldWithDefault(msg, 2, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.HeaderState}
 */
proto.scheduler.v1.HeaderState.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.HeaderState()
  return proto.scheduler.v1.HeaderState.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.HeaderState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.HeaderState}
 */
proto.scheduler.v1.HeaderState.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.addHeaders(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setOffset(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.HeaderState.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.HeaderState.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.HeaderState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.HeaderState.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getHeadersList()
  if (f.length > 0) {
    writer.writeRepeatedString(1, f)
  }
  f = message.getOffset()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
}

/**
 * repeated string headers = 1;
 * @return {!Array<string>}
 */
proto.scheduler.v1.HeaderState.prototype.getHeadersList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.scheduler.v1.HeaderState} returns this
 */
proto.scheduler.v1.HeaderState.prototype.setHeadersList = function (value) {
  return jspb.Message.setField(this, 1, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.scheduler.v1.HeaderState} returns this
 */
proto.scheduler.v1.HeaderState.prototype.addHeaders = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scheduler.v1.HeaderState} returns this
 */
proto.scheduler.v1.HeaderState.prototype.clearHeadersList = function () {
  return this.setHeadersList([])
}

/**
 * optional string offset = 2;
 * @return {string}
 */
proto.scheduler.v1.HeaderState.prototype.getOffset = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.HeaderState} returns this
 */
proto.scheduler.v1.HeaderState.prototype.setOffset = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scheduler.v1.BatchState.repeatedFields_ = [4, 5]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.BatchState.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.BatchState.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.BatchState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.BatchState.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        start: jspb.Message.getFieldWithDefault(msg, 1, ''),
        end: jspb.Message.getFieldWithDefault(msg, 2, ''),
        batchindex: jspb.Message.getFieldWithDefault(msg, 3, ''),
        resultsList: jspb.Message.toObjectList(
          msg.getResultsList(),
          proto.scheduler.v1.SuccessResultState.toObject,
          includeInstance
        ),
        errorsList: jspb.Message.toObjectList(
          msg.getErrorsList(),
          proto.scheduler.v1.ErrorResultState.toObject,
          includeInstance
        )
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.BatchState}
 */
proto.scheduler.v1.BatchState.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.BatchState()
  return proto.scheduler.v1.BatchState.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.BatchState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.BatchState}
 */
proto.scheduler.v1.BatchState.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setStart(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setEnd(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setBatchindex(value)
        break
      case 4:
        var value = new proto.scheduler.v1.SuccessResultState()
        reader.readMessage(
          value,
          proto.scheduler.v1.SuccessResultState.deserializeBinaryFromReader
        )
        msg.addResults(value)
        break
      case 5:
        var value = new proto.scheduler.v1.ErrorResultState()
        reader.readMessage(
          value,
          proto.scheduler.v1.ErrorResultState.deserializeBinaryFromReader
        )
        msg.addErrors(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.BatchState.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.BatchState.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.BatchState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.BatchState.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getStart()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEnd()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getBatchindex()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getResultsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.scheduler.v1.SuccessResultState.serializeBinaryToWriter
    )
  }
  f = message.getErrorsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.scheduler.v1.ErrorResultState.serializeBinaryToWriter
    )
  }
}

/**
 * optional string start = 1;
 * @return {string}
 */
proto.scheduler.v1.BatchState.prototype.getStart = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.setStart = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string end = 2;
 * @return {string}
 */
proto.scheduler.v1.BatchState.prototype.getEnd = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.setEnd = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string batchIndex = 3;
 * @return {string}
 */
proto.scheduler.v1.BatchState.prototype.getBatchindex = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.setBatchindex = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * repeated SuccessResultState results = 4;
 * @return {!Array<!proto.scheduler.v1.SuccessResultState>}
 */
proto.scheduler.v1.BatchState.prototype.getResultsList = function () {
  return /** @type{!Array<!proto.scheduler.v1.SuccessResultState>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.scheduler.v1.SuccessResultState,
      4
    )
  )
}

/**
 * @param {!Array<!proto.scheduler.v1.SuccessResultState>} value
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.setResultsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value)
}

/**
 * @param {!proto.scheduler.v1.SuccessResultState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scheduler.v1.SuccessResultState}
 */
proto.scheduler.v1.BatchState.prototype.addResults = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    4,
    opt_value,
    proto.scheduler.v1.SuccessResultState,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.clearResultsList = function () {
  return this.setResultsList([])
}

/**
 * repeated ErrorResultState errors = 5;
 * @return {!Array<!proto.scheduler.v1.ErrorResultState>}
 */
proto.scheduler.v1.BatchState.prototype.getErrorsList = function () {
  return /** @type{!Array<!proto.scheduler.v1.ErrorResultState>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.scheduler.v1.ErrorResultState,
      5
    )
  )
}

/**
 * @param {!Array<!proto.scheduler.v1.ErrorResultState>} value
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.setErrorsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value)
}

/**
 * @param {!proto.scheduler.v1.ErrorResultState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scheduler.v1.ErrorResultState}
 */
proto.scheduler.v1.BatchState.prototype.addErrors = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    5,
    opt_value,
    proto.scheduler.v1.ErrorResultState,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scheduler.v1.BatchState} returns this
 */
proto.scheduler.v1.BatchState.prototype.clearErrorsList = function () {
  return this.setErrorsList([])
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scheduler.v1.FileWorkflowState.repeatedFields_ = [11, 12]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.FileWorkflowState.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.FileWorkflowState.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.FileWorkflowState} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.FileWorkflowState.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        filename: jspb.Message.getFieldWithDefault(msg, 1, ''),
        requestedby: jspb.Message.getFieldWithDefault(msg, 2, ''),
        runid: jspb.Message.getFieldWithDefault(msg, 3, ''),
        workflowid: jspb.Message.getFieldWithDefault(msg, 4, ''),
        processrunid: jspb.Message.getFieldWithDefault(msg, 5, ''),
        processworkflowid: jspb.Message.getFieldWithDefault(msg, 6, ''),
        hostid: jspb.Message.getFieldWithDefault(msg, 7, ''),
        filesize: jspb.Message.getFieldWithDefault(msg, 8, ''),
        type: jspb.Message.getFieldWithDefault(msg, 9, ''),
        headers:
          (f = msg.getHeaders()) &&
          proto.scheduler.v1.HeaderState.toObject(includeInstance, f),
        offsetsList:
          (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
        batchesList: jspb.Message.toObjectList(
          msg.getBatchesList(),
          proto.scheduler.v1.BatchState.toObject,
          includeInstance
        )
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.FileWorkflowState}
 */
proto.scheduler.v1.FileWorkflowState.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.FileWorkflowState()
  return proto.scheduler.v1.FileWorkflowState.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.FileWorkflowState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.FileWorkflowState}
 */
proto.scheduler.v1.FileWorkflowState.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setFilename(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setRequestedby(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setRunid(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setWorkflowid(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setProcessrunid(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setProcessworkflowid(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setHostid(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setFilesize(value)
        break
      case 9:
        var value = /** @type {string} */ (reader.readString())
        msg.setType(value)
        break
      case 10:
        var value = new proto.scheduler.v1.HeaderState()
        reader.readMessage(
          value,
          proto.scheduler.v1.HeaderState.deserializeBinaryFromReader
        )
        msg.setHeaders(value)
        break
      case 11:
        var value = /** @type {string} */ (reader.readString())
        msg.addOffsets(value)
        break
      case 12:
        var value = new proto.scheduler.v1.BatchState()
        reader.readMessage(
          value,
          proto.scheduler.v1.BatchState.deserializeBinaryFromReader
        )
        msg.addBatches(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.FileWorkflowState.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.scheduler.v1.FileWorkflowState.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.FileWorkflowState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.FileWorkflowState.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getFilename()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getRequestedby()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getRunid()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getWorkflowid()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getProcessrunid()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getProcessworkflowid()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getHostid()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getFilesize()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
  f = message.getType()
  if (f.length > 0) {
    writer.writeString(9, f)
  }
  f = message.getHeaders()
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.scheduler.v1.HeaderState.serializeBinaryToWriter
    )
  }
  f = message.getOffsetsList()
  if (f.length > 0) {
    writer.writeRepeatedString(11, f)
  }
  f = message.getBatchesList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.scheduler.v1.BatchState.serializeBinaryToWriter
    )
  }
}

/**
 * optional string fileName = 1;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getFilename = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setFilename = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string requestedBy = 2;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getRequestedby = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setRequestedby = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string runId = 3;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getRunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setRunid = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string workflowId = 4;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getWorkflowid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setWorkflowid = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string processRunId = 5;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getProcessrunid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setProcessrunid = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string processWorkflowId = 6;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getProcessworkflowid =
  function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
  }

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setProcessworkflowid = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string hostId = 7;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getHostid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setHostid = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string fileSize = 8;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getFilesize = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setFilesize = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

/**
 * optional string type = 9;
 * @return {string}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ''))
}

/**
 * @param {string} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setType = function (value) {
  return jspb.Message.setProto3StringField(this, 9, value)
}

/**
 * optional HeaderState headers = 10;
 * @return {?proto.scheduler.v1.HeaderState}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getHeaders = function () {
  return /** @type{?proto.scheduler.v1.HeaderState} */ (
    jspb.Message.getWrapperField(this, proto.scheduler.v1.HeaderState, 10)
  )
}

/**
 * @param {?proto.scheduler.v1.HeaderState|undefined} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setHeaders = function (value) {
  return jspb.Message.setWrapperField(this, 10, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.clearHeaders = function () {
  return this.setHeaders(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.FileWorkflowState.prototype.hasHeaders = function () {
  return jspb.Message.getField(this, 10) != null
}

/**
 * repeated string offsets = 11;
 * @return {!Array<string>}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getOffsetsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setOffsetsList = function (
  value
) {
  return jspb.Message.setField(this, 11, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.addOffsets = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.clearOffsetsList = function () {
  return this.setOffsetsList([])
}

/**
 * repeated BatchState batches = 12;
 * @return {!Array<!proto.scheduler.v1.BatchState>}
 */
proto.scheduler.v1.FileWorkflowState.prototype.getBatchesList = function () {
  return /** @type{!Array<!proto.scheduler.v1.BatchState>} */ (
    jspb.Message.getRepeatedWrapperField(
      this,
      proto.scheduler.v1.BatchState,
      12
    )
  )
}

/**
 * @param {!Array<!proto.scheduler.v1.BatchState>} value
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.setBatchesList = function (
  value
) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value)
}

/**
 * @param {!proto.scheduler.v1.BatchState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scheduler.v1.BatchState}
 */
proto.scheduler.v1.FileWorkflowState.prototype.addBatches = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    12,
    opt_value,
    proto.scheduler.v1.BatchState,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scheduler.v1.FileWorkflowState} returns this
 */
proto.scheduler.v1.FileWorkflowState.prototype.clearBatchesList = function () {
  return this.setBatchesList([])
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.scheduler.v1.FileWorkflowStateResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.scheduler.v1.FileWorkflowStateResponse.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.scheduler.v1.FileWorkflowStateResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.scheduler.v1.FileWorkflowStateResponse.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        state:
          (f = msg.getState()) &&
          proto.scheduler.v1.FileWorkflowState.toObject(includeInstance, f),
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scheduler.v1.FileWorkflowStateResponse}
 */
proto.scheduler.v1.FileWorkflowStateResponse.deserializeBinary = function (
  bytes
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.scheduler.v1.FileWorkflowStateResponse()
  return proto.scheduler.v1.FileWorkflowStateResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scheduler.v1.FileWorkflowStateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scheduler.v1.FileWorkflowStateResponse}
 */
proto.scheduler.v1.FileWorkflowStateResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = new proto.scheduler.v1.FileWorkflowState()
          reader.readMessage(
            value,
            proto.scheduler.v1.FileWorkflowState.deserializeBinaryFromReader
          )
          msg.setState(value)
          break
        case 2:
          var value = /** @type {boolean} */ (reader.readBool())
          msg.setOk(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.scheduler.v1.FileWorkflowStateResponse.serializeBinaryToWriter(
      this,
      writer
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scheduler.v1.FileWorkflowStateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scheduler.v1.FileWorkflowStateResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getState()
    if (f != null) {
      writer.writeMessage(
        1,
        f,
        proto.scheduler.v1.FileWorkflowState.serializeBinaryToWriter
      )
    }
    f = message.getOk()
    if (f) {
      writer.writeBool(2, f)
    }
  }

/**
 * optional FileWorkflowState state = 1;
 * @return {?proto.scheduler.v1.FileWorkflowState}
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.getState = function () {
  return /** @type{?proto.scheduler.v1.FileWorkflowState} */ (
    jspb.Message.getWrapperField(this, proto.scheduler.v1.FileWorkflowState, 1)
  )
}

/**
 * @param {?proto.scheduler.v1.FileWorkflowState|undefined} value
 * @return {!proto.scheduler.v1.FileWorkflowStateResponse} returns this
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.setState = function (
  value
) {
  return jspb.Message.setWrapperField(this, 1, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.scheduler.v1.FileWorkflowStateResponse} returns this
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.clearState =
  function () {
    return this.setState(undefined)
  }

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.hasState = function () {
  return jspb.Message.getField(this, 1) != null
}

/**
 * optional bool ok = 2;
 * @return {boolean}
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 2, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.scheduler.v1.FileWorkflowStateResponse} returns this
 */
proto.scheduler.v1.FileWorkflowStateResponse.prototype.setOk = function (
  value
) {
  return jspb.Message.setProto3BooleanField(this, 2, value)
}

/**
 * @enum {number}
 */
proto.scheduler.v1.EntityType = {
  AGENT: 0,
  PRINCIPAL: 1,
  FILING: 2
}

goog.object.extend(exports, proto.scheduler.v1)
